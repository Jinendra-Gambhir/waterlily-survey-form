{"ast":null,"code":"var _jsxFileName = \"E:\\\\waterlily_Survey_Form\\\\frontend\\\\src\\\\pages\\\\Responses.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useMemo } from \"react\";\nimport api from \"../services/api\"; // your Axios instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Responses() {\n  _s();\n  const [responses, setResponses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await api.get(\"/responses/me\"); // adjust endpoint if needed\n        setResponses(res.data);\n      } catch (e) {\n        console.error(e);\n        setError(\"Failed to load responses.\");\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  // Group by category\n  const grouped = useMemo(() => {\n    const groups = {\n      demographic: [],\n      health: [],\n      financial: []\n    };\n    for (const r of responses) {\n      var _r$question;\n      if (r !== null && r !== void 0 && (_r$question = r.question) !== null && _r$question !== void 0 && _r$question.category) {\n        groups[r.question.category].push(r);\n      }\n    }\n    return groups;\n  }, [responses]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: \"Loading your responses...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-4 space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Your Survey Responses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), Object.entries(grouped).map(([category, items]) => {\n      if (items.length === 0) return null;\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold capitalize mb-4\",\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: items.map(r => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border rounded-lg p-4 bg-white shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium\",\n              children: r.question.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500 mb-1\",\n              children: r.question.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"Answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), \" \", r.answer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, r.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Responses, \"rLTpgtQnh6VJ/kcr1OBUYYKFMP0=\");\n_c = Responses;\nvar _c;\n$RefreshReg$(_c, \"Responses\");","map":{"version":3,"names":["useEffect","useState","useMemo","api","jsxDEV","_jsxDEV","Responses","_s","responses","setResponses","loading","setLoading","error","setError","res","get","data","e","console","grouped","groups","demographic","health","financial","r","_r$question","question","category","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","items","length","title","description","answer","id","_c","$RefreshReg$"],"sources":["E:/waterlily_Survey_Form/frontend/src/pages/Responses.tsx"],"sourcesContent":["import { useEffect, useState, useMemo } from \"react\";\r\nimport api from \"../services/api\"; // your Axios instance\r\n\r\ntype Question = {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  type: string;\r\n  category: \"demographic\" | \"health\" | \"financial\";\r\n};\r\n\r\ntype ResponseItem = {\r\n  id: number;\r\n  userId: number;\r\n  questionId: number;\r\n  answer: string;\r\n  question: Question;\r\n};\r\n\r\nexport default function Responses() {\r\n  const [responses, setResponses] = useState<ResponseItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await api.get<ResponseItem[]>(\"/responses/me\"); // adjust endpoint if needed\r\n        setResponses(res.data);\r\n      } catch (e) {\r\n        console.error(e);\r\n        setError(\"Failed to load responses.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // Group by category\r\n  const grouped = useMemo(() => {\r\n    const groups: Record<Question[\"category\"], ResponseItem[]> = {\r\n      demographic: [],\r\n      health: [],\r\n      financial: [],\r\n    };\r\n    for (const r of responses) {\r\n      if (r?.question?.category) {\r\n        groups[r.question.category].push(r);\r\n      }\r\n    }\r\n    return groups;\r\n  }, [responses]);\r\n\r\n  if (loading) return <div className=\"p-4\">Loading your responses...</div>;\r\n  if (error) return <div className=\"p-4 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-4 space-y-8\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Your Survey Responses</h1>\r\n\r\n      {Object.entries(grouped).map(([category, items]) => {\r\n        if (items.length === 0) return null;\r\n        return (\r\n          <section key={category}>\r\n            <h2 className=\"text-xl font-semibold capitalize mb-4\">{category}</h2>\r\n            <div className=\"space-y-4\">\r\n              {items.map((r) => (\r\n                <div key={r.id} className=\"border rounded-lg p-4 bg-white shadow\">\r\n                  <div className=\"font-medium\">{r.question.title}</div>\r\n                  <div className=\"text-sm text-gray-500 mb-1\">{r.question.description}</div>\r\n                  <div className=\"mt-1\">\r\n                    <span className=\"font-semibold\">Answer:</span> {r.answer}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </section>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACpD,OAAOC,GAAG,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAkBnC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAiB,EAAE,CAAC;EAC9D,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,IAAI;QACF,MAAMc,GAAG,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAiB,eAAe,CAAC,CAAC,CAAC;QAC5DN,YAAY,CAACK,GAAG,CAACE,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVC,OAAO,CAACN,KAAK,CAACK,CAAC,CAAC;QAChBJ,QAAQ,CAAC,2BAA2B,CAAC;MACvC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,OAAO,GAAGjB,OAAO,CAAC,MAAM;IAC5B,MAAMkB,MAAoD,GAAG;MAC3DC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE;IACb,CAAC;IACD,KAAK,MAAMC,CAAC,IAAIhB,SAAS,EAAE;MAAA,IAAAiB,WAAA;MACzB,IAAID,CAAC,aAADA,CAAC,gBAAAC,WAAA,GAADD,CAAC,CAAEE,QAAQ,cAAAD,WAAA,eAAXA,WAAA,CAAaE,QAAQ,EAAE;QACzBP,MAAM,CAACI,CAAC,CAACE,QAAQ,CAACC,QAAQ,CAAC,CAACC,IAAI,CAACJ,CAAC,CAAC;MACrC;IACF;IACA,OAAOJ,MAAM;EACf,CAAC,EAAE,CAACZ,SAAS,CAAC,CAAC;EAEf,IAAIE,OAAO,EAAE,oBAAOL,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,EAAC;EAAyB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACxE,IAAItB,KAAK,EAAE,oBAAOP,OAAA;IAAKwB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAAElB;EAAK;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEjE,oBACE7B,OAAA;IAAKwB,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CzB,OAAA;MAAIwB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEjEC,MAAM,CAACC,OAAO,CAACjB,OAAO,CAAC,CAACkB,GAAG,CAAC,CAAC,CAACV,QAAQ,EAAEW,KAAK,CAAC,KAAK;MAClD,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;MACnC,oBACElC,OAAA;QAAAyB,QAAA,gBACEzB,OAAA;UAAIwB,SAAS,EAAC,uCAAuC;UAAAC,QAAA,EAAEH;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrE7B,OAAA;UAAKwB,SAAS,EAAC,WAAW;UAAAC,QAAA,EACvBQ,KAAK,CAACD,GAAG,CAAEb,CAAC,iBACXnB,OAAA;YAAgBwB,SAAS,EAAC,uCAAuC;YAAAC,QAAA,gBAC/DzB,OAAA;cAAKwB,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAEN,CAAC,CAACE,QAAQ,CAACc;YAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrD7B,OAAA;cAAKwB,SAAS,EAAC,4BAA4B;cAAAC,QAAA,EAAEN,CAAC,CAACE,QAAQ,CAACe;YAAW;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC1E7B,OAAA;cAAKwB,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnBzB,OAAA;gBAAMwB,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,KAAC,EAACV,CAAC,CAACkB,MAAM;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD,CAAC;UAAA,GALEV,CAAC,CAACmB,EAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMT,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GAZMP,QAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAab,CAAC;IAEd,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC3B,EAAA,CA9DuBD,SAAS;AAAAsC,EAAA,GAATtC,SAAS;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}