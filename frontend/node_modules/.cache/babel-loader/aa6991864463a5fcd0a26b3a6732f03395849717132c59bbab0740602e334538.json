{"ast":null,"code":"var _jsxFileName = \"E:\\\\waterlily_Survey_Form\\\\frontend\\\\src\\\\pages\\\\Responses.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\nimport api from \"../services/api\";\nimport Navbar from \"../components/Navbar\";\n\n// Types\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst categories = [\"\", \"demographic\", \"health\", \"financial\"];\nexport default function Responses() {\n  _s();\n  const [rows, setRows] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [sort, setSort] = useState(\"category\");\n  useEffect(() => {\n    (async () => {\n      try {\n        // If you prefer direct fetch instead of the api helper:\n        // const res = await fetch(\"http://localhost:5000/api/responses\");\n        // const data: ResponseItem[] = await res.json();\n        const res = await api.get(\"/responses\"); // assumes api baseURL is /api\n        setRows(res.data || []);\n      } catch (e) {\n        console.error(e);\n        setError(\"Failed to load responses.\");\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  // Deduplicate by questionId (keep latest by highest id)\n  const deduped = useMemo(() => {\n    const byQ = new Map();\n    for (const r of rows) {\n      const existing = byQ.get(r.questionId);\n      if (!existing || r.id > existing.id) byQ.set(r.questionId, r);\n    }\n    let list = Array.from(byQ.values());\n    if (category) list = list.filter(r => {\n      var _r$question;\n      return ((_r$question = r.question) === null || _r$question === void 0 ? void 0 : _r$question.category) === category;\n    });\n    if (query.trim()) {\n      const q = query.toLowerCase();\n      list = list.filter(r => {\n        var _r$question2, _r$question2$title, _r$question3, _r$question3$descript;\n        const t = ((_r$question2 = r.question) === null || _r$question2 === void 0 ? void 0 : (_r$question2$title = _r$question2.title) === null || _r$question2$title === void 0 ? void 0 : _r$question2$title.toLowerCase()) || \"\";\n        const d = ((_r$question3 = r.question) === null || _r$question3 === void 0 ? void 0 : (_r$question3$descript = _r$question3.description) === null || _r$question3$descript === void 0 ? void 0 : _r$question3$descript.toLowerCase()) || \"\";\n        const a = (r.answer || \"\").toLowerCase();\n        return t.includes(q) || d.includes(q) || a.includes(q);\n      });\n    }\n    const cmp = {\n      category: (a, b) => {\n        var _a$question, _b$question, _a$question2, _b$question2;\n        return (((_a$question = a.question) === null || _a$question === void 0 ? void 0 : _a$question.category) || \"\").localeCompare(((_b$question = b.question) === null || _b$question === void 0 ? void 0 : _b$question.category) || \"\") || (((_a$question2 = a.question) === null || _a$question2 === void 0 ? void 0 : _a$question2.title) || \"\").localeCompare(((_b$question2 = b.question) === null || _b$question2 === void 0 ? void 0 : _b$question2.title) || \"\");\n      },\n      question: (a, b) => {\n        var _a$question3, _b$question3;\n        return (((_a$question3 = a.question) === null || _a$question3 === void 0 ? void 0 : _a$question3.title) || \"\").localeCompare(((_b$question3 = b.question) === null || _b$question3 === void 0 ? void 0 : _b$question3.title) || \"\");\n      },\n      updated: (a, b) => new Date(b.createdAt || 0).getTime() - new Date(a.createdAt || 0).getTime()\n    };\n    return list.sort(cmp[sort]);\n  }, [rows, category, query, sort]);\n  const toCSV = () => {\n    const header = [\"Category\", \"Question\", \"Description\", \"Answer\", \"Updated\"];\n    const lines = deduped.map(r => {\n      var _r$question4, _r$question5, _r$question6;\n      return [((_r$question4 = r.question) === null || _r$question4 === void 0 ? void 0 : _r$question4.category) || \"\", ((_r$question5 = r.question) === null || _r$question5 === void 0 ? void 0 : _r$question5.title) || \"\", ((_r$question6 = r.question) === null || _r$question6 === void 0 ? void 0 : _r$question6.description) || \"\", r.answer || \"\", r.createdAt ? new Date(r.createdAt).toLocaleString() : \"\"];\n    });\n    const csv = [header, ...lines].map(row => row.map(cell => `\"${String(cell).replaceAll('\"', '\"\"')}\"`).join(\",\")).join(\"\\n\");\n    const blob = new Blob([csv], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `responses.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const copyAll = async () => {\n    const text = deduped.map(r => {\n      var _r$question7, _r$question8;\n      return `${(_r$question7 = r.question) === null || _r$question7 === void 0 ? void 0 : _r$question7.category} â€¢ ${(_r$question8 = r.question) === null || _r$question8 === void 0 ? void 0 : _r$question8.title}: ${r.answer}`;\n    }).join(\"\\n\");\n    try {\n      await navigator.clipboard.writeText(text);\n      alert(\"Copied to clipboard\");\n    } catch {\n      alert(\"Copy failed\");\n    }\n  };\n  const Badge = ({\n    children\n  }) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"inline-flex items-center rounded-full border border-gray-300 px-2 py-0.5 text-xs capitalize\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-5xl mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-8 w-56 bg-gray-200 rounded animate-pulse mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-9 w-40 bg-gray-200 rounded animate-pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-9 w-64 bg-gray-200 rounded animate-pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded overflow-hidden\",\n        children: Array.from({\n          length: 6\n        }).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `grid grid-cols-12 gap-3 px-3 py-3 ${i % 2 ? \"bg-white\" : \"bg-gray-50/50\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-2 h-4 bg-gray-200 rounded animate-pulse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-4 h-4 bg-gray-200 rounded animate-pulse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-3 h-4 bg-gray-200 rounded animate-pulse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-3 h-4 bg-gray-200 rounded animate-pulse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 flex flex-col gap-3 sm:flex-row sm:items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-semibold\",\n          children: \"Survey Responses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sm:ml-auto flex flex-col sm:flex-row gap-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto border rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50 sticky top-0 z-10\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-left px-3 py-2 font-medium text-gray-700\",\n                children: \"Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-left px-3 py-2 font-medium text-gray-700 w-72\",\n                children: \"Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: deduped.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 5,\n                className: \"px-3 py-6 text-center text-gray-500\",\n                children: \"No responses found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this) : deduped.map((r, idx) => {\n              var _r$question9, _r$question0;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: idx % 2 ? \"bg-white\" : \"bg-gray-50/50\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-left px-3 py-2\",\n                  children: [(_r$question9 = r.question) === null || _r$question9 === void 0 ? void 0 : _r$question9.title, /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-gray-500 mt-0.5\",\n                    children: ((_r$question0 = r.question) === null || _r$question0 === void 0 ? void 0 : _r$question0.description) || \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 74\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-left px-3 py-2 break-words\",\n                  children: r.answer || \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this)]\n              }, r.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Responses, \"DSeqqWCYUi5HhbUJ3meu+HlA54w=\");\n_c = Responses;\nvar _c;\n$RefreshReg$(_c, \"Responses\");","map":{"version":3,"names":["useEffect","useMemo","useState","api","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","categories","Responses","_s","rows","setRows","loading","setLoading","error","setError","category","setCategory","query","setQuery","sort","setSort","res","get","data","e","console","deduped","byQ","Map","r","existing","questionId","id","set","list","Array","from","values","filter","_r$question","question","trim","q","toLowerCase","_r$question2","_r$question2$title","_r$question3","_r$question3$descript","t","title","d","description","a","answer","includes","cmp","b","_a$question","_b$question","_a$question2","_b$question2","localeCompare","_a$question3","_b$question3","updated","Date","createdAt","getTime","toCSV","header","lines","map","_r$question4","_r$question5","_r$question6","toLocaleString","csv","row","cell","String","replaceAll","join","blob","Blob","type","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","copyAll","text","_r$question7","_r$question8","navigator","clipboard","writeText","alert","Badge","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","_","i","colSpan","idx","_r$question9","_r$question0","_c","$RefreshReg$"],"sources":["E:/waterlily_Survey_Form/frontend/src/pages/Responses.tsx"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\r\nimport api from \"../services/api\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\n// Types\r\ntype Category = \"demographic\" | \"health\" | \"financial\";\r\n\r\ntype Question = {\r\n  id: number;\r\n  title: string;\r\n  description?: string;\r\n  type: string;\r\n  category: Category;\r\n};\r\n\r\ntype ResponseItem = {\r\n  id: number;\r\n  userId: number;\r\n  questionId: number;\r\n  answer: string;\r\n  question: Question;\r\n  createdAt?: string;\r\n};\r\n\r\nconst categories: Array<\"\" | Category> = [\"\", \"demographic\", \"health\", \"financial\"];\r\n\r\nexport default function Responses() {\r\n  const [rows, setRows] = useState<ResponseItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [category, setCategory] = useState<\"\" | Category>(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sort, setSort] = useState<\"category\" | \"question\" | \"updated\">(\"category\");\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        // If you prefer direct fetch instead of the api helper:\r\n        // const res = await fetch(\"http://localhost:5000/api/responses\");\r\n        // const data: ResponseItem[] = await res.json();\r\n        const res = await api.get<ResponseItem[]>(\"/responses\"); // assumes api baseURL is /api\r\n        setRows(res.data || []);\r\n      } catch (e) {\r\n        console.error(e);\r\n        setError(\"Failed to load responses.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // Deduplicate by questionId (keep latest by highest id)\r\n  const deduped = useMemo(() => {\r\n    const byQ = new Map<number, ResponseItem>();\r\n    for (const r of rows) {\r\n      const existing = byQ.get(r.questionId);\r\n      if (!existing || r.id > existing.id) byQ.set(r.questionId, r);\r\n    }\r\n\r\n    let list = Array.from(byQ.values());\r\n\r\n    if (category) list = list.filter((r) => r.question?.category === category);\r\n\r\n    if (query.trim()) {\r\n      const q = query.toLowerCase();\r\n      list = list.filter((r) => {\r\n        const t = r.question?.title?.toLowerCase() || \"\";\r\n        const d = r.question?.description?.toLowerCase() || \"\";\r\n        const a = (r.answer || \"\").toLowerCase();\r\n        return t.includes(q) || d.includes(q) || a.includes(q);\r\n      });\r\n    }\r\n\r\n    const cmp: Record<typeof sort, (a: ResponseItem, b: ResponseItem) => number> = {\r\n      category: (a, b) => (a.question?.category || \"\").localeCompare(b.question?.category || \"\") || (a.question?.title || \"\").localeCompare(b.question?.title || \"\"),\r\n      question: (a, b) => (a.question?.title || \"\").localeCompare(b.question?.title || \"\"),\r\n      updated: (a, b) => new Date(b.createdAt || 0).getTime() - new Date(a.createdAt || 0).getTime(),\r\n    } as const;\r\n\r\n    return list.sort(cmp[sort]);\r\n  }, [rows, category, query, sort]);\r\n\r\n  const toCSV = () => {\r\n    const header = [\"Category\", \"Question\", \"Description\", \"Answer\", \"Updated\"];\r\n    const lines = deduped.map((r) => [\r\n      r.question?.category || \"\",\r\n      r.question?.title || \"\",\r\n      r.question?.description || \"\",\r\n      r.answer || \"\",\r\n      r.createdAt ? new Date(r.createdAt).toLocaleString() : \"\",\r\n    ]);\r\n    const csv = [header, ...lines]\r\n      .map((row) => row.map((cell) => `\"${String(cell).replaceAll('\"', '\"\"')}\"`).join(\",\"))\r\n      .join(\"\\n\");\r\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = `responses.csv`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const copyAll = async () => {\r\n    const text = deduped\r\n      .map((r) => `${r.question?.category} â€¢ ${r.question?.title}: ${r.answer}`)\r\n      .join(\"\\n\");\r\n    try {\r\n      await navigator.clipboard.writeText(text);\r\n      alert(\"Copied to clipboard\");\r\n    } catch {\r\n      alert(\"Copy failed\");\r\n    }\r\n  };\r\n\r\n  const Badge = ({ children }: { children: string }) => (\r\n    <span className=\"inline-flex items-center rounded-full border border-gray-300 px-2 py-0.5 text-xs capitalize\">\r\n      {children}\r\n    </span>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"max-w-5xl mx-auto p-4\">\r\n        <div className=\"h-8 w-56 bg-gray-200 rounded animate-pulse mb-4\" />\r\n        <div className=\"flex items-center gap-2 mb-4\">\r\n          <div className=\"h-9 w-40 bg-gray-200 rounded animate-pulse\" />\r\n          <div className=\"h-9 w-64 bg-gray-200 rounded animate-pulse\" />\r\n        </div>\r\n        <div className=\"border rounded overflow-hidden\">\r\n          {Array.from({ length: 6 }).map((_, i) => (\r\n            <div key={i} className={`grid grid-cols-12 gap-3 px-3 py-3 ${i % 2 ? \"bg-white\" : \"bg-gray-50/50\"}`}>\r\n              <div className=\"col-span-2 h-4 bg-gray-200 rounded animate-pulse\" />\r\n              <div className=\"col-span-4 h-4 bg-gray-200 rounded animate-pulse\" />\r\n              <div className=\"col-span-3 h-4 bg-gray-200 rounded animate-pulse\" />\r\n              <div className=\"col-span-3 h-4 bg-gray-200 rounded animate-pulse\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) return <div className=\"p-4 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <>\r\n       <Navbar />\r\n    <div className=\"max-w-6xl mx-auto p-4\">\r\n      {/* Header + controls */}\r\n      <div className=\"mb-4 flex flex-col gap-3 sm:flex-row sm:items-center\">\r\n        <h1 className=\"text-2xl font-semibold\">Survey Responses</h1>\r\n\r\n        <div className=\"sm:ml-auto flex flex-col sm:flex-row gap-2\">\r\n      \r\n        </div>\r\n      </div>\r\n\r\n      {/* Table */}\r\n      <div className=\"overflow-x-auto border rounded\">\r\n        <table className=\"min-w-full text-sm\">\r\n          <thead className=\"bg-gray-50 sticky top-0 z-10\">\r\n            <tr>\r\n              <th className=\"text-left px-3 py-2 font-medium text-gray-700\">Question</th>\r\n              <th className=\"text-left px-3 py-2 font-medium text-gray-700 w-72\">Answer</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {deduped.length === 0 ? (\r\n              <tr>\r\n                <td colSpan={5} className=\"px-3 py-6 text-center text-gray-500\">\r\n                  No responses found.\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              deduped.map((r, idx) => (\r\n                <tr key={r.id} className={idx % 2 ? \"bg-white\" : \"bg-gray-50/50\"}>\r\n                  <td className=\"text-left px-3 py-2\">{r.question?.title}<div className=\"text-gray-500 mt-0.5\">{r.question?.description || \"-\"}</div></td>\r\n                  <td className=\"text-left px-3 py-2 break-words\">{r.answer || \"-\"}</td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}